<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Picture.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +/Y/tqbIbqUepUgAAAAASUVORK5CYII=
</value>
  </data>
</root>